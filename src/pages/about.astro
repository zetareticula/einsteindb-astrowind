---
import Features2 from '~/components/widgets/Features2.astro';
import Features3 from '~/components/widgets/Features3.astro';
import Hero from '~/components/widgets/Hero.astro';
import Stats from '~/components/widgets/Stats.astro';
import Steps2 from '~/components/widgets/Steps2.astro';
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'About us',
};
---

<Layout metadata={metadata}>
  <!-- Hero Widget ******************* -->

  <Hero
    tagline="About us"
    image={{
      src: 'https://images.unsplash.com/photo-1559136555-9303baea8ebd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80',
      alt: 'Caos Image',
    }}
  >
    <Fragment slot="title">
      Learning Based Database - EinsteinDB vectorized store exploits the distinct merits of hash index and B+-Tree index to support range scan while keeping long NVM writes consistent. <br />
      <span class="text-accent dark:text-white highlight"> Reinforcement Learning for View Advisors and SQL Rewriting</span>
    </Fragment>

    <Fragment slot="subtitle">
     EinsteinDB uses LLM to enhance the performance of the database system. It uses a reinforcement learning model to provide view advisors and SQL rewriting. The system is designed to provide a better user experience and improve the performance of the database system.
    </Fragment>
  </Hero>

  <!-- Stats Widget ****************** -->

  <Stats
    title="Statistics about us"
    stats={[
      { title: 'Offices', amount: '4' },
      { title: 'Employees', amount: '248' },
      { title: 'Templates', amount: '12' },
      { title: 'Awards', amount: '24' },
    ]}
  />

  <!-- Features3 Widget ************** -->

  <Features3
    title="SQL Extensions for AI"
    subtitle="EinsteinDB's Zeta Reticula API serves as a novel design for enhanced retrieval RAG apps"
    columns={3}
    isBeforeContent={true}
    items={[
      {
        title: 'AI4DB',
        description:
          `EinsteinDB's AI4DB API is a novel design for enhanced retrieval RAG apps. It uses a reinforcement learning model to provide view advisors and SQL rewriting.`,
      },
      {
        title: 'Data discovery',
        description:
          'EinsteinDB enhances data labeling to improve data lineage tracking',
        icon: 'tabler:template',
      },
      {
        title: 'Automatic Knob Tuning',
        description:
          'EinsteinDB uses LLM as a strategy for automatic knob tuning and optimal view selection',
        icon: 'tabler:template',
      },
    ]}
  />

  <!-- Features3 Widget ************** -->

  <Features3
    columns={3}
    isAfterContent={true}
    items={[
      {
        title: 'Hybrid Memory System',
        description:
          'EinsteinDB uses a hybrid memory system to enhance the performance of the database system using a key-value store',
        icon: 'tabler:template',
      },
      {
        title: 'Performance Guarantees',
        description:
          'EinsteinDB uses FoundationDB via a novel design for enhanced retrieval RAG apps',
        icon: 'tabler:template',
      },
      {
        title: 'Indexes are Few Shot Learners',
        description:
          'EinsteinDB uses a few-shot learning model to provide view advisors and SQL rewriting',
      },
      {
        title: 'CRDTs',
        description:
          'EinsteinDB uses CRDTs to enhance the performance of the database system',
        icon: 'tabler:template',
      },
      {
        title: 'Differential Concurrency Control',
        description:
          ' With VioletaBFT, EinsteinDB uses differential concurrency control to enhance the performance of the database system',
        icon: 'tabler:template',
      },
      {
        title: 'MilevaDB',
        description:
          'EinsteinDB and FoundationDB Write optimized storage engine representations of serverless caching with MilevaDB',
        icon: 'tabler:template',
      },
    ]}
    image={{
      src: 'https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1740&q=80',
      alt: 'Colorful Image',
    }}
  />

  <!-- Steps2 Widget ****************** -->

  <Steps2
    title="Hybrid Language Model"
    subtitle="EinsteinDB uses a hybrid language model to enhance the performance of the database system. It uses a reinforcement learning model to provide view advisors and SQL rewriting."
    items={[
      {
        title: 'Innovative Solutions',
        description:
        `EinsteinDB's Zeta Reticula API serves as a novel design for enhanced retrieval RAG apps. It uses a reinforcement learning model to provide view advisors and SQL rewriting.`,
      },
      {
        title: 'Constant Improvement',
        description:
          'EinsteinDB uses LLM to enhance the performance of the database system. It uses a reinforcement learning model to provide view advisors and SQL rewriting.',
      {
        title: 'Optimal Performance',
        description:
          'EinsteinDB uses a hybrid memory system to enhance the performance of the database system. It uses a reinforcement learning model to provide view advisors and SQL rewriting.',
      },
    ]}
  />

  

  <Steps2
    title="Multi-Dimensional Spatial Index"
    subtitle="Use EinsteinDB's Model-Free Few or Zero Shot Index LLM with Enhanced Retrieval (RAG) Apps: Zeta Reticula API"
    isReversed={true}
    callToAction={{
      text: 'See more',
      href: '/',
    }}
    items={[
      {
        title: 'NewSQL',
        description: 'Our content addressable approach deploys an IPFS-style content addressable infrastructure for peer-to-peer sharing of state information.',
        icon: 'tabler:globe',
      },
      {
        title: 'Positive customer feedback and reviews',
        description:
          'Cras semper nulla leo, eget laoreet erat cursus sed. Praesent faucibus massa in purus iaculis dictum.',
        icon: 'tabler:message-star',
      },
      {
        title: 'Causets are Content-addressable hash-based merkle trees',
        description:
          'EinsteinDB uses containerizatioon as an embedded EventSource to allow for the storage of data in a distributed manner.',
        icon: 'tabler:award',
      },
    ]}
  />
